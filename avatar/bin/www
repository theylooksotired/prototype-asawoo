var app = require('../app');
var debug = require('debug')('avatar:server');
var http = require('http');
var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);
var server = http.createServer(app);

// Listen to the port 3000
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);



// FUNCTIONS
// Normalize a port number
function normalizePort(val) {
	var port = parseInt(val, 10);
	if (isNaN(port)) return val;
	if (port >= 0) return port;
	return false;
}

//Error handling
function onError(error) {
	if (error.syscall !== 'listen') {
		throw error;
	}
	var bind = (typeof port === 'string') ? 'Pipe ' + port : 'Port ' + port;
	switch (error.code) {
		case 'EACCES':
			console.error(bind + ' requires elevated privileges');
			process.exit(1);
		break;
		case 'EADDRINUSE':
			console.error(bind + ' is already in use');
			process.exit(1);
		break;
		default:
			throw error;
	}
}

// Event listener
function onListening() {
	var addr = server.address();
	var bind = (typeof addr === 'string') ? 'Pipe ' + addr : 'Port ' + addr.port;
	console.log('Listening on ' + bind);
}